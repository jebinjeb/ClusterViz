openapi: 3.0.3
info:
  title: ClusterViz API 3.0
  version: 1.0.0
  description: This is the description of ClusterViz API.
servers:
  - url: http://localhost:8080/api/v1
x-go-package: "C:/Program Files/Go/src/clusterviz/api"
paths:
  /clusters:
    get:
      summary: Get all clusters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster'
        "403":
          description: "unauthorized operation"
          content:
            "application/json":
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ErrorModel"
        "401":
          description: "unauthenticated operation"
          content:
            "application/json":
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ErrorModel"
          headers:
            X-Rate-Limit-Limit:
              "$ref": "#/components/headers/X-Rate-Limit-Limit"
            X-Rate-Limit-Remaining:
              "$ref": "#/components/headers/X-Rate-Limit-Remaining"
            X-Rate-Limit-Reset:
              "$ref": "#/components/headers/X-Rate-Limit-Reset"
            X-Request-ID:
              "$ref": "#/components/headers/X-Request-ID"
        "400":
          description: "bad request"
          content:
            "application/json":
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ErrorModel"
          headers:
            X-Rate-Limit-Limit:
              "$ref": "#/components/headers/X-Rate-Limit-Limit"
            X-Rate-Limit-Remaining:
              "$ref": "#/components/headers/X-Rate-Limit-Remaining"
            X-Rate-Limit-Reset:
              "$ref": "#/components/headers/X-Rate-Limit-Reset"
            X-Request-ID:
              "$ref": "#/components/headers/X-Request-ID"
  /clusters/{id}:
    get:
      summary: Get a cluster by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        "403":
          description: "unauthorized operation"
          content:
            "application/json":
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ErrorModel"
        "401":
          description: "unauthenticated operation"
          content:
            "application/json":
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ErrorModel"
          headers:
            X-Rate-Limit-Limit:
              "$ref": "#/components/headers/X-Rate-Limit-Limit"
            X-Rate-Limit-Remaining:
              "$ref": "#/components/headers/X-Rate-Limit-Remaining"
            X-Rate-Limit-Reset:
              "$ref": "#/components/headers/X-Rate-Limit-Reset"
            X-Request-ID:
              "$ref": "#/components/headers/X-Request-ID"
        "400":
          description: "bad request"
          content:
            "application/json":
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ErrorModel"
          headers:
            X-Rate-Limit-Limit:
              "$ref": "#/components/headers/X-Rate-Limit-Limit"
            X-Rate-Limit-Remaining:
              "$ref": "#/components/headers/X-Rate-Limit-Remaining"
            X-Rate-Limit-Reset:
              "$ref": "#/components/headers/X-Rate-Limit-Reset"
            X-Request-ID:
              "$ref": "#/components/headers/X-Request-ID"
  /clusterviz:
    get:
      summary: Get cluster visualization data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deployments:
                    type: array
                    items:
                      type: object
                      properties:
                        namespace:
                          type: string
                        deploymentName:
                          type: string
                        replicas:
                          type: integer
                        nodes:
                          type: array
                          items:
                            type: string
                        livenessProbe:
                          type: object
                          properties:
                            containerName:
                              type: string
                            failureThreshold:
                              type: integer
                        readinessProbe:
                          type: object
                          properties:
                            containerName:
                              type: string
                            failureThreshold:
                              type: integer
                  replicaSets:
                    type: array
                    items:
                      type: object
                      properties:
                        namespace:
                          type: string
                        replicaSetName:
                          type: string
                        replicas:
                          type: integer
                        nodeScheduling:
                          type: string
                        nodes:
                          type: string
                  nodes:
                    type: string
                  numberOfPods:
                      type: integer
                  pods:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          conditions:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                status:
                                  type: string
                                lastProbeTime:
                                  $ref: '#/components/schemas/metav1.Time'
                                lastTransitionTime:
                                  $ref: '#/components/schemas/metav1.Time'    
components:
  schemas:
    metav1.Time:
      type: object
      properties:
        type:
          type: string
        format:
          type: string
    Cluster:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    ErrorModel:
      title: ErrorModel
      required:
        - errorDetails
        - errorCode
        - message
        - debugId
        - httpStatusCode
      type: object
      properties:
        errorDetails:
          title: Error Details
          type: object
        errorCode:
          title: Error Code
          type: string
        message:
          title: Message
          type: string
        debugId:
          title: Debug ID
          type: string
        httpStatusCode:
          title: HttpStatus Code
          type: integer
  headers:
    X-Rate-Limit-Limit:
      description: "The number of allowed requests in the current period"
      schema:
        type: "integer"
    X-Rate-Limit-Remaining:
      description: "The number of remaining requests in the current period"
      schema:
        type: "integer"
    X-Rate-Limit-Reset:
      description: "The number of seconds left in the current period"
      schema:
        type: "integer"
    Retry-After:
      description: "The number of seconds to wait before retrying"
      schema:
        type: "integer"
    X-Request-ID:
      description: "The request id used to track the operation"
      schema:
        type: "string"
